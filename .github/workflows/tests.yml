name: Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  NODE_VERSION: '22'
  PNPM_VERSION: '10'
  PYTHON_VERSION: '3.12'

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Install dependencies
      run: uv sync --group test
      
    - name: Run linting
      run: uv run ruff check .
      
    - name: Run unit tests
      run: uv run pytest tests/unit -v --cov=src --cov-report=xml --cov-report=term-missing
      
    - name: Run integration tests
      run: uv run pytest tests/integration -v --cov=src --cov-append --cov-report=xml --cov-report=term-missing
      
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: ${{ env.PNPM_VERSION }}
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run linting
      run: pnpm lint
      continue-on-error: true  # Don't fail the entire job if linting has issues
      
    - name: Run unit tests
      run: pnpm test:coverage
      
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail the entire workflow if security scan fails
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always() && github.actor != 'nektos/act' # Skip when running locally with act
      continue-on-error: true
      with:
        sarif_file: 'trivy-results.sarif'

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, security-scan]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        echo "=== Quality Gate Results ==="
        
        # Critical tests that must pass
        CRITICAL_FAILED=false
        
        if [[ "${{ needs.backend-tests.result }}" != "success" ]]; then
          echo "‚ùå Backend tests failed - CRITICAL"
          CRITICAL_FAILED=true
        else
          echo "‚úÖ Backend tests passed"
        fi
        
        if [[ "${{ needs.frontend-tests.result }}" != "success" ]]; then
          echo "‚ùå Frontend tests failed - CRITICAL" 
          CRITICAL_FAILED=true
        else
          echo "‚úÖ Frontend tests passed"
        fi
        
        # Optional tests that provide information but don't block
        if [[ "${{ needs.security-scan.result }}" == "success" ]]; then
          echo "‚úÖ Security scan passed"
        else
          echo "‚ö†Ô∏è  Security scan failed - non-blocking"
        fi
        
        # Final decision
        if [[ "$CRITICAL_FAILED" == "true" ]]; then
          echo ""
          echo "‚ùå Quality gate FAILED - Critical tests must pass"
          exit 1
        else
          echo ""
          echo "‚úÖ Quality gate PASSED - All critical tests successful! üéâ"
        fi
